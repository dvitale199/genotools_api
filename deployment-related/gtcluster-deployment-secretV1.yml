apiVersion: v1
kind: Secret
metadata:
  name: gt-api-sec
data:
  api-key: <API-KEY>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gtcluster-pod
  name: gtcluster-pod
  namespace: gke-ns-gtcluster-eu-west4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gtcluster-pod
  template:
    metadata:
      labels:
        app: gtcluster-pod
      annotations:
        gke-gcsfuse/volumes: "true" 
        #Optional resource configuration for the sidecar container. Allocate more CPU to the sidecar container if your workloads need higher throughput.
        gke-gcsfuse/cpu-limit: "2"
        gke-gcsfuse/memory-limit: 8Gi
        gke-gcsfuse/ephemeral-storage-limit: 8Gi   
    spec:
      serviceAccountName: ksa
      volumes:
      - name: gcs-volume
        persistentVolumeClaim:
          claimName: gtserver-pvc
      containers:
      - image: us-east1-docker.pkg.dev/gp2-release-terra/syed-test/genotools_api:latest
        name: gtcluster-container
        # resources:
        #   requests:
        #     memory: "60Gi"
        #     cpu: "12"
        #   limits:
        #     memory: "80Gi"
        #     cpu: "16"        
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: gcs-volume
          mountPath: /app/genotools_api/data
        env:
          - name: API_TOKEN
            valueFrom:
              secretKeyRef:
                name: gt-api-sec
                key: api-key
      # Ensure pods are scheduled on nodes with the specified GCP VM type
      nodeSelector:
        cloud.google.com/gke-nodepool: ancesstory-pool
---
apiVersion: v1
kind: Service
metadata:
  name: gtcluster-svc-nodeport
  annotations:
    cloud.google.com/backend-config: '{"default": "gtcluster-backendconfig"}'  
spec:
  type: NodePort #LoadBalancer
  selector:
    app: gtcluster-pod
  ports:
    - port: 8000
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gtcluster-ingress
  namespace: gke-ns-gtcluster-eu-west4
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.allow-http: "true"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: gtcluster-svc-nodeport
            port: 
              number: 8000
      - path: /run-genotools/
        pathType: ImplementationSpecific
        backend:
          service:
            name: gtcluster-svc-nodeport
            port: 
              number: 8000              
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: gtcluster-backendconfig
  namespace: gke-ns-gtcluster-eu-west4
spec:
  timeoutSec: 14400              

